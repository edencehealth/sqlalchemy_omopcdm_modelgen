# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  push:
    tags:
      - '*.*.*'


permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: checkout
        uses: actions/checkout@v4

      - name: Version check
        run: |
          #!/bin/sh
          # verify that the tag matches the version string in pyproject.toml
          set -eux
          TAG="${GITHUB_REF##refs/tags/v}"  # e.g. 1.0.0
          grep -qE "^version = \"$TAG\"$" pyproject.toml

      # https://github.com/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          #!/bin/sh
          set -eux
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade -r requirements-dev.txt

      - name: Build package
        run: |
          #!/bin/sh
          set -eux
          source venv/bin/activate
          python -m build
          twine check dist/*

      # https://github.com/pypa/gh-action-pypi-publish
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
